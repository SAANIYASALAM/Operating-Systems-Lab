#include<stdio.h>

struct Process
{
    int Pid,AT,BT,CT,TAT,WT;    
}P[30];

void main()
{
    int n,i,tq,flag;
    float TotTAT=0,TotWT=0;
    
    printf("Enter number of processes= ");
    scanf("%d",&n);
    
    printf("Enter the process id,arrival time and burst time of each process:\n");
    for(i=0;i<n;i++)
    {
        scanf("%d%d%d",&P[i].Pid,&P[i].AT,&P[i].BT);
    }
    
    printf("Enter the time quantum = ");
    scanf("%d",&tq);
    
    int rem_time[n],current_time=0,completed=0;
    
    for(i=0;i<n;i++)
    {
        rem_time[i] = P[i].BT;
    }
    
    while(completed < n)
    {
        for(i=0;i<n;i++)
        {
            flag = 0;
            if(P[i].AT <= current_time && rem_time[i] > 0)
            {
                flag = 1;
                if(rem_time[i] <= tq)
                {
                    current_time += rem_time[i];
                    rem_time[i] = 0;
                    
                    P[i].CT = current_time;
                    P[i].TAT = P[i].CT - P[i].AT;
                    P[i].WT = P[i].TAT - P[i].BT;
                    
                    completed++;
                } 
                else
                {
                    current_time += tq;
                    rem_time[i] -= tq;
                }
            }
        }
        if(!flag)
        {
            current_time++;
        }
    }
    
    printf("\n\n--------ROUND ROBIN SCHEDULING--------\n\n");
    printf("PID\tAT\tBT\tCT\tTAT\tWT\n");
    for(i=0;i<n;i++)
    {
        printf("%d\t%d\t%d\t%d\t%d\t%d\n",P[i].Pid,P[i].AT,P[i].BT,P[i].CT,P[i].TAT,P[i].WT);
        TotTAT += P[i].TAT;
        TotWT += P[i].WT;
    }
    printf("Average Turnaround Time=%f\n",TotTAT/n);
    printf("Average Waiting Time=%f",TotWT/n);
}
